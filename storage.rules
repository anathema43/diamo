rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Product images - readable by all, writable by admins only
    match /products/{allPaths=**} {
      allow read: if true;
      allow write: if isAdmin() && 
        request.resource.size < 5 * 1024 * 1024 && // 5MB limit
        request.resource.contentType.matches('image/.*'); // Only images
    }
    
    // User profile images - readable by all, writable by owner with restrictions
    match /users/{userId}/profile/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.size < 2 * 1024 * 1024 && // 2MB limit
        request.resource.contentType.matches('image/.*') && // Only images
        // Limit to 5 files per user
        resource == null || resource.size < 5;
    }
    
    // Order attachments - readable/writable by order owner only
    match /orders/{userId}/{orderId}/{allPaths=**} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.size < 1 * 1024 * 1024; // 1MB limit for order attachments
    }
    
    // Admin uploads - admin only with size limits
    match /admin/{allPaths=**} {
      allow read, write: if isAdmin() &&
        request.resource.size < 10 * 1024 * 1024; // 10MB limit for admin files
    }
  }
}